
-- Create the Student table if it does not exist
CREATE TABLE IF NOT EXISTS students (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(50),
    date_of_birth DATE,
    field_of_study VARCHAR(50)
);

-- Create indexes for the Student table
CREATE INDEX IF NOT EXISTS idx_student_first_name ON students(first_name);
CREATE INDEX IF NOT EXISTS idx_student_last_name ON students(last_name);
CREATE INDEX IF NOT EXISTS idx_student_email ON students(email);

-- Create the Course table if it does not exist
CREATE TABLE IF NOT EXISTS courses (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(100),
    description TEXT,
    hours INT,
    max_students INT
);

-- Create indexes for the Course table
CREATE INDEX IF NOT EXISTS idx_course_name ON courses(name);
CREATE INDEX IF NOT EXISTS idx_course_hours ON courses(hours);
CREATE INDEX IF NOT EXISTS idx_course_max_students ON courses(max_students);

-- Create the Lecture table if it does not exist
CREATE TABLE IF NOT EXISTS lecturers (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(50),
    field_of_study VARCHAR(50)
);

-- Create indexes for the Lecturer table
CREATE INDEX IF NOT EXISTS idx_lecturer_first_name ON lecturers(first_name);
CREATE INDEX IF NOT EXISTS idx_lecturer_last_name ON lecturers(last_name);
CREATE INDEX IF NOT EXISTS idx_lecturer_email ON lecturers(email);
CREATE INDEX IF NOT EXISTS idx_lecturer_field_of_study ON lecturers(field_of_study);

-- Junction table to handle the Many-to-Many relationship between students and courses
CREATE TABLE IF NOT EXISTS student_courses (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    student_id BIGINT NOT NULL,
    course_id BIGINT NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    UNIQUE (student_id, course_id), -- Ensures unique student-course pairs
    FOREIGN KEY (student_id) REFERENCES students(id),
    FOREIGN KEY (course_id) REFERENCES courses(id)
);

-- Create indexes for the student_course table
CREATE INDEX IF NOT EXISTS idx_student_courses_student_id ON student_courses(student_id);
CREATE INDEX IF NOT EXISTS idx_student_courses_course_id ON student_courses(course_id);

-- Junction table to handle the Many-to-Many relationship between lecturers and courses
CREATE TABLE IF NOT EXISTS lecturer_courses (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    lecturer_id BIGINT NOT NULL,
    course_id BIGINT NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    UNIQUE (lecturer_id, course_id),  -- Ensures unique lecturer-course pairs
    FOREIGN KEY (lecturer_id) REFERENCES lecturers(id),
    FOREIGN KEY (course_id) REFERENCES courses(id)
);

-- Add indexes for individual columns to optimize single-column searches
CREATE INDEX idx_lecturer_courses_lecturer_id ON lecturer_courses(lecturer_id);
CREATE INDEX idx_lecturer_courses_course_id ON lecturer_courses(course_id);

